/**
 * User Profile
 * This is a sample for User Profile.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: ila.kalyani@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.2.3
 *
 * Do not edit the class manually.
 *
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Address', 'model/Authentication', 'model/SuccessResponse', 'model/Transaction', 'model/User', 'model/UserAddress', 'api/UserApi', 'api/UserAuthenticationApi', 'api/UserTransactionsApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/Address'), require('./model/Authentication'), require('./model/SuccessResponse'), require('./model/Transaction'), require('./model/User'), require('./model/UserAddress'), require('./api/UserApi'), require('./api/UserAuthenticationApi'), require('./api/UserTransactionsApi'));
  }
}(function(ApiClient, Address, Authentication, SuccessResponse, Transaction, User, UserAddress, UserApi, UserAuthenticationApi, UserTransactionsApi) {
  'use strict';

  /**
   * This_is_a_sample_for_User_Profile_.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var UserProfile = require('index'); // See note below*.
   * var xxxSvc = new UserProfile.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new UserProfile.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new UserProfile.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new UserProfile.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version 1.0.0
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The Address model constructor.
     * @property {module:model/Address}
     */
    Address: Address,
    /**
     * The Authentication model constructor.
     * @property {module:model/Authentication}
     */
    Authentication: Authentication,
    /**
     * The SuccessResponse model constructor.
     * @property {module:model/SuccessResponse}
     */
    SuccessResponse: SuccessResponse,
    /**
     * The Transaction model constructor.
     * @property {module:model/Transaction}
     */
    Transaction: Transaction,
    /**
     * The User model constructor.
     * @property {module:model/User}
     */
    User: User,
    /**
     * The UserAddress model constructor.
     * @property {module:model/UserAddress}
     */
    UserAddress: UserAddress,
    /**
     * The UserApi service constructor.
     * @property {module:api/UserApi}
     */
    UserApi: UserApi,
    /**
     * The UserAuthenticationApi service constructor.
     * @property {module:api/UserAuthenticationApi}
     */
    UserAuthenticationApi: UserAuthenticationApi,
    /**
     * The UserTransactionsApi service constructor.
     * @property {module:api/UserTransactionsApi}
     */
    UserTransactionsApi: UserTransactionsApi
  };

  return exports;
}));
